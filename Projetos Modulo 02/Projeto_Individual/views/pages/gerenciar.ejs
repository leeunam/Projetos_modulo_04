<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="../style.css" rel="stylesheet" />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800&family=Plus+Jakarta+Sans:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <title>Simples - Meus Eventos</title>
  </head>
  <body style="padding: 0; align-items: flex-start; background: white">
    <div class="page-container">
      <div id="header-placeholder"></div>

      <main class="main-content">
        <div class="main-layout">
          <div class="events-container">
            <div class="page-header">
              <h1 class="page-title">Meus Eventos</h1>
              <a href="criarEvento" class="btn btn-primary create-event-link">
                Criar Evento
              </a>
            </div>

            <% if (typeof success !== 'undefined' && success) { %>
            <div
              class="success-message"
              style="
                background-color: #efe;
                color: #363;
                padding: 10px;
                border-radius: 5px;
                margin-bottom: 15px;
              "
            >
              <%= success %>
            </div>
            <% } %> <% if (typeof error !== 'undefined' && error) { %>
            <div
              class="error-message"
              style="
                background-color: #fee;
                color: #c33;
                padding: 10px;
                border-radius: 5px;
                margin-bottom: 15px;
              "
            >
              <%= error %>
            </div>
            <% } %>

            <section class="table-container">
              <% if (events && events.length > 0) { %>
              <div class="table">
                <div class="table-header">
                  <div class="table-cell event-name-column">
                    <div class="table-header-cell">Evento</div>
                  </div>
                  <div class="table-cell event-date-column">
                    <div class="table-header-cell">Data</div>
                  </div>
                  <div class="table-cell participants-column">
                    <div class="table-header-cell">Localiza√ß√£o</div>
                  </div>
                  <div class="table-cell actions-column">
                    <div class="table-header-cell actions-header">A√ß√µes</div>
                  </div>
                </div>

                <% events.forEach(event => { %>
                <div class="table-row">
                  <div class="table-data-cell event-name-column">
                    <div class="table-cell-text"><%= event.name %></div>
                  </div>
                  <div class="table-data-cell event-date-column">
                    <div class="table-cell-link">
                      <%= new Date(event.event_date).toLocaleDateString('pt-BR')
                      %> √†s <%= event.event_time %>
                    </div>
                  </div>
                  <div class="table-data-cell participants-column">
                    <div class="table-cell-text">
                      <%= event.street %>, <%= event.number %> - <%=
                      event.district %>
                    </div>
                  </div>
                  <div class="table-data-cell actions-column">
                    <div class="action-buttons">
                      <button
                        class="action-btn edit-btn"
                        onclick="editEvent(<%= event.id %>)"
                      >
                        Editar
                      </button>
                      <button
                        class="action-btn delete-btn"
                        onclick="deleteEvent(<%= event.id %>, '<%= event.name %>')"
                      >
                        Excluir
                      </button>
                    </div>
                  </div>
                </div>
                <% }); %>
              </div>
              <% } else { %>
              <div class="empty-state">
                <div class="empty-icon">üìÖ</div>
                <h3 class="empty-title">Nenhum evento criado ainda</h3>
                <p class="empty-description">
                  Comece criando seu primeiro evento e gerencie todas as suas
                  atividades em um s√≥ lugar.
                </p>
                <a href="criarEvento" class="btn btn-primary"
                  >Criar Primeiro Evento</a
                >
              </div>
              <% } %>
            </section>
          </div>
        </div>
      </main>
    </div>

    <!-- Modal de confirma√ß√£o para exclus√£o -->
    <div class="modal-overlay" id="deleteModal">
      <div class="modal">
        <div class="modal-header">
          <div class="modal-icon">üóëÔ∏è</div>
          <h2 class="modal-title">Excluir Evento</h2>
          <p class="modal-message">
            Tem certeza que deseja excluir este evento?
          </p>
        </div>
        <div class="modal-body">
          <div class="modal-event-name" id="eventNameDisplay"></div>
          <div class="modal-warning">
            ‚ö†Ô∏è Esta a√ß√£o n√£o pode ser desfeita. Todos os dados do evento ser√£o
            perdidos permanentemente.
          </div>
          <div class="modal-actions">
            <button
              class="modal-btn modal-btn-cancel"
              onclick="closeDeleteModal()"
            >
              Cancelar
            </button>
            <button class="modal-btn modal-btn-delete" id="confirmDeleteBtn">
              Excluir Evento
            </button>
          </div>
        </div>
      </div>
    </div>

    <script src="../scripts.js"></script>
    <script>
      // Vari√°veis globais para o modal
      let currentEventId = null;
      let currentEventName = null;

      // Fun√ß√£o para editar evento
      function editEvent(eventId) {
        window.location.href = `/evento/${eventId}/editar`;
      }

      // Fun√ß√£o para abrir modal de exclus√£o
      function deleteEvent(eventId, eventName) {
        currentEventId = eventId;
        currentEventName = eventName;

        // Atualizar o conte√∫do do modal
        document.getElementById('eventNameDisplay').textContent = eventName;

        // Mostrar o modal
        const modal = document.getElementById('deleteModal');
        modal.classList.add('active');

        // Configurar o bot√£o de confirma√ß√£o
        const confirmBtn = document.getElementById('confirmDeleteBtn');
        confirmBtn.onclick = confirmDeleteEvent;
      }

      // Fun√ß√£o para fechar o modal
      function closeDeleteModal() {
        const modal = document.getElementById('deleteModal');
        modal.classList.remove('active');
        currentEventId = null;
        currentEventName = null;
      }

      // Fun√ß√£o para confirmar a exclus√£o
      async function confirmDeleteEvent() {
        const confirmBtn = document.getElementById('confirmDeleteBtn');

        // Adicionar estado de loading
        confirmBtn.disabled = true;
        confirmBtn.classList.add('loading');
        confirmBtn.textContent = 'Excluindo...';

        try {
          const response = await fetch(`/evento/${currentEventId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          const result = await response.json();

          if (response.ok) {
            // Sucesso - mostrar mensagem e recarregar a p√°gina
            closeDeleteModal();

            // Mostrar mensagem de sucesso tempor√°ria
            showSuccessMessage('Evento exclu√≠do com sucesso!');

            // Recarregar ap√≥s um delay para mostrar a mensagem
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            // Erro do servidor
            showErrorMessage(`Erro ao excluir evento: ${result.error}`);
            resetDeleteButton();
          }
        } catch (error) {
          console.error('Erro ao excluir evento:', error);
          showErrorMessage('Erro ao excluir evento. Tente novamente.');
          resetDeleteButton();
        }
      }

      // Fun√ß√£o para resetar o bot√£o de exclus√£o
      function resetDeleteButton() {
        const confirmBtn = document.getElementById('confirmDeleteBtn');
        confirmBtn.disabled = false;
        confirmBtn.classList.remove('loading');
        confirmBtn.textContent = 'Excluir Evento';
      }

      // Fun√ß√£o para mostrar mensagem de sucesso
      function showSuccessMessage(message) {
        const successDiv = document.createElement('div');
        successDiv.className = 'success-message';
        successDiv.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          background-color: #f0fdf4;
          color: #059669;
          padding: 16px 20px;
          border-radius: 8px;
          border: 1px solid #bbf7d0;
          font-size: 14px;
          font-weight: 500;
          z-index: 3000;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        `;
        successDiv.textContent = message;
        document.body.appendChild(successDiv);

        // Remover ap√≥s 3 segundos
        setTimeout(() => {
          if (successDiv.parentNode) {
            successDiv.parentNode.removeChild(successDiv);
          }
        }, 3000);
      }

      // Fun√ß√£o para mostrar mensagem de erro
      function showErrorMessage(message) {
        const errorDiv = document.createElement('div');
        errorDiv.className = 'error-message';
        errorDiv.style.cssText = `
          position: fixed;
          top: 20px;
          right: 20px;
          background-color: #fef2f2;
          color: #dc2626;
          padding: 16px 20px;
          border-radius: 8px;
          border: 1px solid #fecaca;
          font-size: 14px;
          font-weight: 500;
          z-index: 3000;
          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        `;
        errorDiv.textContent = message;
        document.body.appendChild(errorDiv);

        // Remover ap√≥s 5 segundos
        setTimeout(() => {
          if (errorDiv.parentNode) {
            errorDiv.parentNode.removeChild(errorDiv);
          }
        }, 5000);
      }

      // Fechar modal ao clicar no overlay
      document
        .getElementById('deleteModal')
        .addEventListener('click', function (e) {
          if (e.target === this) {
            closeDeleteModal();
          }
        });

      // Fechar modal com tecla ESC
      document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
          closeDeleteModal();
        }
      });
    </script>
  </body>
</html>
